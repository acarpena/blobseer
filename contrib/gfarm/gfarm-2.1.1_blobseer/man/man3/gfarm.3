.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.TH "GFARM" "3" "22 August 2005" "Gfarm" ""
.SH NAME
gfarm \- Gfarm native API library
.SH SYNOPSIS

.nf
#include <gfarm/gfarm.h>
.fi
.SH "DESCRIPTION"
.PP
The Gfarm library provides an interface layer to
the gfarm filesystem. This manual only gives an overview of the
library, please use manual pages of each functions to see the
detail of the functions.
.SS "INITIALIZE / FINALIZE"
.PP
\fBgfarm_initialize\fR(3) function is used for the initilization of the Gfarm
library, and
\fBgfarm_terminate\fR(3) function is used for the termination of the library.
.SS "FILE INPUT/OUTPUT OPERATIONS"
.PP
\fBgfs_pio_set_local\fR(3) function specifies current node number and total number
of nodes as an initialization step of a parallel process.
To open an existing file as a stream,
\fBgfs_pio_open\fR(3) function is used.
To create an file and open the file as a stream,
\fBgfs_pio_create\fR(3) function is used.
\fBgfs_pio_close\fR(3) function is used to close such streams.
\fBgfs_pio_set_view_index\fR(3) function and
\fBgfs_pio_set_view_local\fR(3) function specifies an access method of a parallel file.
.PP
\fBgfs_pio_error\fR(3) function is used to see whether an error happens or not
about a stream.
\fBgfs_pio_eof\fR(3) function is used to see whether a stream,
which is opened for read, already reaches end-of-file or not.
\fBgfs_pio_seek\fR(3) function changes the current position of the stream.
.PP
\fBgfs_pio_getc\fR(3) functions reads a character from a stream, and
\fBgfs_pio_ungetc\fR(3) functions puts back a character to a stream.
\fBgfs_pio_getline\fR(3) function,
\fBgfs_pio_gets\fR(3) function, and
\fBgfs_pio_readline\fR(3) function read one line from a stream, and
\fBgfs_pio_readdelim\fR(3) function reads from stream until delimiter character,
specified by the function argument, appears.
\fBgfs_pio_read\fR(3) functions reads specified bytes from a stream.
.PP
\fBgfs_pio_putc\fR(3) function writes one character to a stream, and
\fBgfs_pio_putline\fR(3) function and
\fBgfs_pio_puts\fR(3) function write one line to a stream.
\fBgfs_pio_write\fR(3) function writes specified bytes to a stream.
\fBgfs_pio_flush\fR(3) function,
\fBgfs_pio_sync\fR(3) function and
\fBgfs_pio_datasync\fR(3) function moves buffered data to a storage device.
\fBgfs_pio_truncate\fR(3) function truncates a file.
.SS "DIRECTORY ACCESS"
.PP
\fBgfs_chdir\fR(3) function changes current working directory.
\fBgfs_realpath\fR(3) function returns full pathname of the argument.
.PP
\fBgfs_opendir\fR(3) function opens a directory, and
\fBgfs_readdir\fR(3) function retrieves entries of the directory.
\fBgfs_closedir\fR(3) function closes the directory.
.PP
A gfs_glob_t data, which is initilized by
\fBgfs_glob_init\fR(3) function,
can be passed to
\fBgfs_glob\fR(3) function, and the gfs_glob function returns
list of matched file/directory names in the gfs_glob_t.
The gfs_glob_t must be released by 
\fBgfs_glob_free\fR(3) function.
\fBgfs_glob_add\fR(3) function is used add an entry to gfs_glob_t.
.SS "FILE / DIRECTORY MANIPULATION"
.PP
\fBgfs_chmod\fR(3) function changes the mode of a file, and
\fBgfs_utimes\fR(3) function changes file's modified time and access time.
.PP
\fBgfs_mkdir\fR(3) function creates a directory, and
\fBgfs_rmdir\fR(3) function removes a directory.
\fBgfs_unlink\fR(3) function removes a file, and
\fBgfs_unlink_section\fR(3) function removes a fragment which is a member of
a parallel file.
\fBgfs_rename\fR(3) function renames a file or a directory.
.PP
\fBgfs_stat\fR(3) function returns information like size, modified/access
time, etc.
The struct gfs_stat returned by gfs_stat function must be released by
\fBgfs_stat_free\fR(3) function.
.SS "UTILITY FUNCTIONS"
.PP
\fBgfarm_hostlist_read\fR(3) function,
\fBgfarm_import_fragment_config_read\fR(3) function, and
\fBgfarm_import_fragment_size_alloc\fR(3) function are utility functions used to register
a file as a fragmented parallel file. Please see the source code of
\fBgfimport_text\fR(1) command and
\fBgfimport_fixed\fR(1) command as an example how to use these functions.
.SS "STRING ARRAY MANIPULATION UTILITIES"
.PP
A gfarm_stringlist type variable represents an array of strings,
and this type is initialized by
\fBgfarm_stringlist_init\fR(3) function.
\fBgfarm_stringlist_add\fR(3) function is used to add a string to a gfarm_stringlist.
\fBgfarm_stringlist_cat\fR(3) function is used to add strings to a gfarm_stringlist.
\fBgfarm_stringlist_free\fR(3) function releases gfarm_stringlist.
\fBgfarm_stringlist_elem\fR(3) function or
GFARM_STRINGLIST_ELEM() macro
can be used to access each string of an array.
\fBgfarm_stringlist_length\fR(3) function can be used to see number of strings in an array.
.PP
\fBgfarm_strings_free_deeply\fR(3) function releases a string array and each element of the
array by calling standard library function free().
.SS "STRING ARRAY MANIPULATION MACROS"
.TP
\fBGFARM_STRINGLIST_ELEM(list, i)\fR
represents \fIi\fR-th element of
the \fIlist\fR argument which type is gfarm_stringlist.
This macro can be used as a L-value.
If this macro is used as a value, it returns same result with
\fBgfarm_stringlist_elem\fR(3) function.
.TP
\fBGFARM_STRINGLIST_STRARRAY(list)\fR
returns pointer to first element of the \fIlist\fR argument
which type is gfarm_stringlist.
The type of the return value is a pointer to pointer to a character.
.SS "INTERNAL FUNCTIONS"
.PP
\fBgfarm_url_program_register\fR(3) function,
\fBgfarm_url_hosts_schedule\fR(3) function,
\fBgfarm_url_fragments_replicate\fR(3) function,
\fBgfarm_url_program_deliver\fR(3) function,
\fBgfarm_url_section_replicate_from_to\fR(3) function, and
\fBgfarm_url_section_replicate_to\fR(3) functions are internal functions of Gfarm.
These manual are provided by historical reasons, but these specification
may be changed later.
