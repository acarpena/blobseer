<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN">

<refentry id='gfarm2.conf.5'>

<refentryinfo><date>14 Feb 2008</date></refentryinfo>

<refmeta>
<refentrytitle>gfarm2.conf</refentrytitle>
<manvolnum>5</manvolnum>
<refmiscinfo>Gfarm</refmiscinfo>
</refmeta>

<refnamediv id='name'>
<refname>gfarm2.conf</refname>
<refpurpose>Gfarm configuration file</refpurpose>
</refnamediv>

<!-- body begins here -->

<refsect1 id='description'><title>DESCRIPTION</title>
<para>
gfarm2.conf is a text file that contains a Gfarm configuration.  
Gfarm server processes gfmd and gfsd refer to %%SYSCONFDIR%%/gfmd.conf
and %%SYSCONFDIR%%/gfarm2.conf, respectively, by default.
Since this configuration file is only read at startup, it is necessary
to restart servers when the contents of the configuration file are
updated.
</para>

<para>
Application programs, such as gfls and gfhost, refer to both
%%SYSCONFDIR%%/gfarm2.conf, and a file specified by an environment variable,
GFARM_CONFIG_FILE. If both configuration files exist, the file
specified by the environment variable, GFARM_CONFIG_FILE, is read
first. Both files have the same grammar.
If the environment variable GFARM_CONFIG_FILE doesn't exist,
 ~/.gfarm2rc in a user's home directory is used instead.
</para>

<para>
Each line of gfarm2.conf consists of one statement.  When the
line ends with the character ``\'', the line continues for the next
line.  A word beginning with ``#'' causes that word and all remaining
characters on that line to be ignored.
</para>

</refsect1>

<refsect1 id='hostspecification'><title>Host_specification</title>
<para><parameter>Host_specification</parameter> has the following
forms.</para>
<variablelist>

<varlistentry>
<term><parameter>III.JJJ.KKK.LLL</parameter></term>
<listitem>
<para>Specifies an IP address with four octets from 0 to 255, separated
by ".".</para>
</listitem>
</varlistentry>

<varlistentry>
<term><parameter>III.JJJ.KKK.LLL</parameter>/<parameter>MM</parameter></term>
<listitem>
<para>Specifies a network address with an IP address and a netmask
from 0 to 31 separated by "/".</para>
</listitem>
</varlistentry>

<varlistentry>
<term><parameter>domain.name</parameter></term>
<listitem>
<para>Specifies a host name.</para>
</listitem>
</varlistentry>

<varlistentry>
<term> <parameter>.domain.name</parameter></term>
<listitem>
<para>Specifies all hosts which belong to the domain.name.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><emphasis>*</emphasis></term>
<listitem>
<para>Specifies all hosts.</para>
</listitem>
</varlistentry>

</variablelist>
</refsect1>

<refsect1 id='statement'><title>Statement</title>
<para>The following statements are supported.</para>
<variablelist>

<varlistentry>
<term><token>spool</token> <parameter>directory</parameter></term>
<listitem>
<para>The <token>spool</token> statement specifies a spool directory
for a Gfarm filesystem on this filesystem node.</para>
<para>For example,</para>
<literallayout>
	spool /var/spool/gfarm
</literallayout>
</listitem>
</varlistentry>
  
  <varlistentry>
<term><token>spool_server_listen_address</token> <parameter>IP-address</parameter></term>
<listitem>
<para>The <token>spool_server_listen_address</token> statement specifies
the IP address at which the gfsd accepts TCP and UDP requests.
The default address is all IP addresses of the host.
This option is useful when one wants to invoke multiple gfsd
to provide multiple spool directories on the host.
</para>
<para>For example,</para>
<literallayout>
	spool_server_listen_address 192.168.121.1
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>spool_server_cred_type</token> <parameter>cred_type</parameter></term>
<listitem>
<para>
This statement specifies the type of credential used by gfsd for GSI
authentication.
This is ignored when you are using <token>sharedsecret</token> 
authentication.
</para>
<para>
If this statement isn't used on the server side, the server uses
a host certificate, if the server is invoked with root privileges.
Or, if the server is invoked as a non-privileged user, the server
uses the user's certificate.
</para>
<para>
If this statement isn't used on the client side, the client assumes
that the server that the client is going to connect is using
a host certificate of the server host. Thus, if the server is not
invoked with root privileges, but invoked with user privileges where
the user is the same as the user who invoked the client, the client
side needs to specify the following one line.
</para>
<para>Example:</para>
<literallayout>
	spool_server_cred_type self
</literallayout>
<para>
The possible types of <parameter>cred_type</parameter> are
``<token>self</token>'', 
``<token>host</token>'', ``<token>user</token>'' and 
``<token>mechanism-specific</token>''.
And those are used with the <token>spool_server_cred_service</token>
and <token>spool_server_cred_name</token> statements as follows:
</para>
<variablelist>
<varlistentry>
<term><token>self</token></term>
<listitem>
<para>
This keyword specifies that the certificate that the user currently
has is used.
You must not use either the 
<token>spool_server_cred_service</token> or
<token>spool_server_cred_name</token> statement,
if you are using this type.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><token>host</token></term>
<listitem>
<para>
This keyword specifies that a host certificate or a service certificate
is used.
To choose a service certificate, the name of the service may be specified
by the <token>spool_server_cred_service</token> statement.
If ``<token>host</token>'' is specified as the service name, a host certificate
in the file ``<filename>/etc/grid-security/hostcert.pem</filename>'' will
be used.
If any server name other than ``<token>host</token>'' is specified,
a service certificate in the file
``<filename>/etc/grid-security/SERVICE/SERVICEcert.pem</filename>''
will be used.
If the service name is omitted, ``<token>host</token>'' will be used as
the service name by default.
Only the Common Name field of a certificate will be used to check
the server's identity for both a host certificate and a service certificate.
And the Common Name field must be in the ``CN=SERVERNAME/HOSTNAME'' format.
Also, the hostname must match the canonical name configured by
the <command>gfhost</command> command exactly.  Alias hostnames are not allowed.
</para>
<para>
This feature corresponds to the GSS_C_NT_HOSTBASED_SERVICE feature in GSSAPI
(RFC2743/RFC2744).
</para>
<para>Example:</para>
<literallayout>
	spool_server_cred_type host
	spool_server_cred_service host
</literallayout>
</listitem>
</varlistentry>
<varlistentry>
<term><token>user</token></term>
<listitem>
<para>
This keyword specifies that a user certificate is used.
The account name of the user may be specified by the
<token>spool_server_cred_name</token> statement.
If the account name is omitted, the user who invoked the command
will be used by default.
You must not specify a service name using
the <token>spool_server_cred_service</token> statement, if you are using
a user certificate.
</para>
<para>
To map from the account name to a Distinguished Name of a certificate,
file ``<filename>/etc/grid-security/grid-mapfile</filename>'' is used.
Thus, if there isn't such a file, or if the user isn't specified in this file,
this feature cannot be used.
</para>
<para>
This feature corresponds to the GSS_C_NT_USER_NAME feature in GSSAPI
(RFC2743/RFC2744).
</para>
<para>Example:</para>
<literallayout>
	spool_server_cred_type user
	spool_server_cred_name guest
</literallayout>
</listitem>
</varlistentry>
<varlistentry>
<term><token>mechanism-specific</token></term>
<listitem>
<para>
This keyword specifies that <token>spool_server_cred_name</token>
is treated as a raw X.509 Distinguished Name serving as a server's
certificate.
You must not specify a service name using a
<token>spool_server_cred_service</token> statement, if you are using
this type.
</para>
<para>
This feature corresponds to a case where GSS_C_NO_OID is specified
as a Name Type in GSSAPI (RFC2743/RFC2744).
</para>
<para>Example:</para>
<literallayout>
	spool_server_cred_type mechanism-specific
	spool_server_cred_name "/O=Grid/O=Globus/OU=example.com/CN=John Smith"
</literallayout>
</listitem>
</varlistentry>
</variablelist>
</listitem>
</varlistentry>

<varlistentry>
<term><token>spool_server_cred_service</token> <parameter>cred_service</parameter></term>
<listitem>
<para>
This statement specifies the service name of a service certificate
used by gfsd for GSI authentication, when ``<token>host</token>'' is specified
in <token>spool_server_cred_type</token> statement.
This is ignored when you are using <token>sharedsecret</token> 
authentication.
Please read the description of the <token>spool_server_cred_type</token> 
statement for details.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><token>spool_server_cred_name</token> <parameter>cred_name</parameter></term>
<listitem>
<para>
This statement specifies the setting of a certificate used by gfsd
for GSI authentication. What this setting means depends on the type
specified in the <token>spool_server_cred_type</token> statement.
This is ignored when you are using <token>sharedsecret</token> 
authentication.
Please read the description of the <token>spool_server_cred_type</token> 
statement for details.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><token>metadb_server_host</token> <parameter>hostname</parameter></term>
<listitem>
<para>The <token>metadb_server_host</token> statement specifies the
host name on which gfmd is running.</para>
<para>This statement cannot be omitted.</para>
<para>For example,</para>
<literallayout>
	metadb_server_host ldap.example.com
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>metadb_server_port</token> <parameter>port</parameter></term>
<listitem>
<para>The <token>metadb_server_port</token> statement specifies the tcp
port number the gfmd is listening on.  The default port number is
601.</para>
<para>For example,</para>
<literallayout>
	metadb_server_port 601
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>metadb_server_cred_type</token> <parameter>cred_type</parameter></term>
<listitem>
<para>
This statement specifies the type of credential used by gfmd
for GSI authentication.
This is ignored when you are using <token>sharedsecret</token> 
authentication.
Please read the description of the <token>spool_server_cred_type</token> 
statement on the configuration of this statement.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><token>metadb_server_cred_service</token> <parameter>cred_service</parameter></term>
<listitem>
<para>
This statement specifies the service name of a service certificate
used by gfmd for GSI authentication, when ``<token>host</token>'' is specified
in <token>metadb_server_cred_type</token> statement.
This is ignored when you are using <token>sharedsecret</token> 
authentication.
Please read the description of the <token>spool_server_cred_type</token> 
statement on the configuration of this statement.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><token>metadb_server_cred_name</token> <parameter>cred_name</parameter></term>
<listitem>
<para>
This statement specifies the setting of a certificate used by gfmd
for GSI authentication. What this setting means depends on the type
specified in the <token>metadb_server_cred_type</token> statement.
This is ignored when you are using <token>sharedsecret</token> 
authentication.
Please read the description of the <token>spool_server_cred_type</token> 
statement on the configuration of this statement.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><token>ldap_server_host</token> <parameter>hostname</parameter></term>
<listitem>
<para>The <token>ldap_server_host</token> statement specifies the host
name on which an LDAP server is running.  This statement is required
when the LDAP server is used for a backend database of gfmd.  This
statement is used in gfmd.conf not gfarm2.conf.</para>

<para>For example,</para>
<literallayout>
	ldap_server_host ldap.example.com
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>ldap_server_port</token> <parameter>port</parameter></term>
<listitem>
<para>The <token>ldap_server_port</token> statement specifies the tcp
port number of the LDAP server.</para>
<para>This statement cannot be omitted
  if <token>ldap_server_host</token> is specified.</para>
<para>For example,</para>
<literallayout>
	ldap_server_port 602
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>ldap_base_dn</token> <parameter>LDAP_base_distinguished_name</parameter></term>
<listitem>
<para>The <token>ldap_base_dn</token> statement specifies the
base-distinguished name of the LDAP database.</para>
<para>This statement cannot be omitted
  if <token>ldap_server_host</token> is specified.</para>
<para>For example,</para>
<literallayout>
	ldap_base_dn "dc=example, dc=com"
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>ldap_bind_dn</token> <parameter>LDAP_bind_distinguished_name</parameter></term>
<listitem>
<para>The <token>ldap_bind_dn</token> statement specifies the
distinguished name for the bind operation which is used for authentication
to the LDAP database.</para>
<para>For example,</para>
<literallayout>
	ldap_bind_dn "cn=gfarmuser, dc=example, dc=com"
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>ldap_bind_password</token> <parameter>password</parameter></term>
<listitem>
<para>The <token>ldap_bind_password</token> statement specifies the
password for the bind operation which is used for authentication
to the LDAP database.</para>
<para>For example,</para>
<literallayout>
	ldap_bind_password "secret-ldap-password"
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>postgresql_server_host</token> <parameter>hostname</parameter></term>
<listitem>
<para>The <token>postgresql_server_host</token> statement specifies the host
name on which a PostgreSQL server is running.  This statement is required
when the PostgreSQL server is used for a backend database of gfmd.  This
statement is used in gfmd.conf not gfarm2.conf.</para>

<para>For example,</para>
<literallayout>
	postgresql_server_host postgresql.example.com
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>postgresql_server_port</token> <parameter>port</parameter></term>
<listitem>
<para>The <token>postgresql_server_port</token> statement specifies the tcp
port number of the PostgreSQL server.</para>
<para>This statement cannot be omitted
  if <token>postgresql_server_host</token> is specified.</para>
<para>For example,</para>
<literallayout>
	postgresql_server_port 602
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>postgresql_dbname</token> <parameter>dbname</parameter></term>
<listitem>
<para>The <token>postgresql_dbname</token> statement specifies the
  database name of the PostgreSQL database.</para>
<para>This statement cannot be omitted
  if <token>postgresql_server_host</token> is specified.</para>
<para>For example,</para>
<literallayout>
	postgresql_dbname gfarm
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>postgresql_user</token> <parameter>user</parameter></term>
<listitem>
<para>The <token>postgresql_user</token> statement specifies the
  username used to connect the PostgreSQL database.</para>
<para>For example,</para>
<literallayout>
	postgresql_user gfarm
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>postgresql_password</token> <parameter>password</parameter></term>
<listitem>
<para>The <token>postgresql_password</token> statement specifies the
  password used to connect the PostgreSQL database.</para>
<para>For example,</para>
<literallayout>
	postgresql_password gfarm
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>postgresql_conninfo</token> <parameter>connection_info</parameter></term>
<listitem>
<para>The <token>postgresql_conninfo</token> statement specifies the
  connection option used to connect the PostgreSQL database.</para>
<para>For example,</para>
<literallayout>
	postgresql_conninfo "sslmode=require connect_timeout=30"
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>auth</token> <parameter>validity</parameter>
<parameter>method</parameter> <parameter>Host_specification</parameter></term>
<listitem>
<para>This statement specifies the authentication method when
communicating with the host(s) specified by the third argument.</para>

<para>The first argument should be either the <token>enable</token> or
<token>disable</token> keyword.
The second argument, <parameter>auth method</parameter>, should be
the <token>gsi</token>, <token>gsi_auth</token>, or <token>sharedsecret</token>
keyword.
The third argument specifies the host(s) by using <parameter>Host
specification</parameter>.</para>

<para>The <token>auth</token> statement may be specified any number of
times.  For each authentication method, it becomes a candidate when
the first entry whose host_specification matches the target host has
the <token>enable</token> keyword.  When there is no corresponding
entry, or when the first corresponding entry has the
<token>disable</token> keyword, the authentication method does not
become a candidate.</para>

<para>This process takes place on both client and server sides.
Candidates for authentication method on both sides will be
tried.</para>

<para>The order of statements with different authentication methods is
not relevant.  When there are several candidates for the authentication
method for the host, the order of the authentication trial is
<token>sharedsecret</token>, <token>gsi_auth</token>,
and then <token>gsi</token>.
</para>

<para>The GSI methods are available if and only if the
--with-globus option is specified at configuration.  When the methods are
not available, an <token>auth</token> statement with
<token>gsi</token> or <token>gsi_auth</token> will be ignored.</para>

<para>This statement cannot be omitted.</para>
<para>For example,</para>
<literallayout>
	auth disable sharedsecret 192.168.0.100
	auth disable sharedsecret 192.168.0.101
	auth enable sharedsecret 192.168.0.0/24
	auth enable gsi_auth 10.0.0.0/8
	auth enable gsi *
</literallayout>

<para>In this example, all hosts which belong to the network address
192.168.0.0/24, except for two hosts, 192.168.0.100 and 192.168.0.101,
will be tested for authenticated by both <token>sharedsecret</token>
and <token>gsi</token>;
all hosts which belong to the network address 10.0.0.0/8 will be
tested for authentication by both
<token>gsi_auth</token> and <token>gsi</token>;
and all other hosts will be authenticated by
<token>gsi</token>.  Note that two hosts, 192.168.0.100 and
192.168.0.101, will be tested for authentication by gsi only.</para>

</listitem>
</varlistentry>

<!--
<varlistentry>
<term><token>netparam</token> <parameter>parameter</parameter><emphasis>=</emphasis><parameter>value</parameter> <emphasis>[</emphasis><parameter>Host_specification</parameter><emphasis>]</emphasis></term>
<listitem>
<para>The <token>netparam</token> statement specifies several
communication parameters listed below.</para>

<para><token>parallel_streams</token>.  This parameter specifies the
number of tcp streams.  The default is a single stream.  The
<token>parallel_streams</token> parameter may improve the file
transfer performance, especially when connecting to a distant site
(i.e., a high bandwidth-delay product network) such that the tcp congestion
window size will not increase sufficiently.  This parameter is only
effective on a client node where the gfrep(1) command is executed.
<parameter>Host_specification</parameter> specifies the source host(s)
for file replication instead of the destination host(s).</para>

<para><token>stripe_unit_size</token>.  This parameter specifies how
to divide the data when utilizing multiple tcp streams.  Without this
parameter, the data will be divided into
<token>parallel_streams</token> of contiguous blocks with almost even
size.  When this parameter is specified, the data is divided in
round-robin fashion with the specified block size in bytes.  Generally
speaking, the performance of file transfer is improved using this
parameter.</para>

<para>This parameter is effective only when two or more is specified
as the <token>parallel_streams</token> parameter.  This parameter is
only effective on a client node where the gfrep(1) command is executed.
<parameter>Host_specification</parameter> specifies the source host(s)
for file replication instead of the destination host(s).</para>

<para><token>rate_limit</token>.  This parameter specifies the maximum
transfer rate (bps; bit per second) for a single connection, and is
introduced experimentally.  The parameter on a source filesystem node
is effective during parallel file replication.  <parameter>Host
specification</parameter> specifies the destination host(s) for file
replication.  Note that this parameter has to be specified on a
source filesystem node, not on a client host, unlike the other
parameters.</para>

<para>For example,</para>
<literallayout>
	netparam parallel_streams=2	10.0.0.0/8
	netparam stripe_unit_size=8192	10.0.0.0/8
	netparam rate_limit=750000	192.168.0.0/24
</literallayout>
</listitem>
</varlistentry>
 -->

<varlistentry>
<term><token>sockopt </token><parameter>option</parameter><emphasis>[=</emphasis><parameter>value</parameter><emphasis>] [<token>LISTENER</token> | <parameter>Host_specification</parameter>]</emphasis></term>
<listitem>
<para>The <token>sockopt</token> parameter specifies the socket option
<parameter>option</parameter> via the setsockopt(2) system call.</para>

<para>When <token>LISTENER</token> (all capital letters) is specified
by the second argument, the socket option is applied to any socket
on the server side (accepting side).</para>

<para>When the host_specification is specified by the second argument,
the socket option is applied to sockets that connect to the specified host(s).
If the second argument is "*", the socket option is applied to any
hosts on the client side (connecting side).
</para>

<para>If the second argument is omitted, the socket option is applied
to every socket.</para>

<para>The following socket options can be specified.</para>

<para><token>debug</token>.  The <constant>SO_DEBUG</constant> socket
option is specified.  A <parameter>value</parameter> is not
necessary.</para>

<para><token>keepalive</token>.  The <constant>SO_KEEPALIVE</constant>
socket option is specified.  A <parameter>value</parameter> is not
necessary.</para>

<para><token>sndbuf</token>.  The <constant>SO_SNDBUF</constant> socket
option is specified with a <parameter>value</parameter>.</para>

<para><token>rcvbuf</token>.  The <constant>SO_RCVBUF</constant> socket
option is specified with a <parameter>value</parameter>.</para>

<para><token>tcp_nodelay</token>.  The <constant>TCP_NODELAY</constant>
socket option is specified.  A <parameter>value</parameter> is not
necessary.</para>

<para>For example,</para>
<literallayout>
	sockopt tcp_nodelay 192.168.0.0/24
	sockopt sndbuf=1048576 10.0.0.0/8
	sockopt sndbuf=1048576 LISTENER
	sockopt rcvbuf=1048576 10.0.0.0/8
	sockopt rcvbuf=1048576 LISTENER
</literallayout>
</listitem>
</varlistentry>

<!--
<varlistentry>
<term><token>address_use</token> <parameter>Host_specification</parameter></term>
<listitem>
<para>The <token>address_use</token> statement specifies an IP address
or a network address that is given preference for connection when the
target host has several IP addresses.</para>
<para>For example,</para>
<literallayout>
	address_use 192.168.0.0/24
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>client_architecture</token> <parameter>architecture</parameter> <parameter>Host_specification</parameter></term>
<listitem>
<para>This directive specifies the default architecture name that may be used
when a client node accesses an executable file.
This directive only affects client nodes.
For filesystem nodes, architecture names registered in
the metadata server are used.
</para>
<para>
On the other hand, the environment variable, GFARM_ARCHITECTURE,
which specifies the default architecture name, just as in this directive,
affects both client nodes and filesystem nodes.
</para>
<para>Example:</para>
<literallayout>
	client_architecture i386-redhat8.0-linux linux-1.example.com
	client_architecture i386-redhat8.0-linux linux-2.example.com
	client_architecture sparc-sun-solaris8 solaris-1.example.com
</literallayout>
</listitem>
</varlistentry>
 -->

<varlistentry>
<term><token>admin_user</token> <parameter>user</parameter></term>
<listitem>
<para>
This directive specifies an administrator user name, which is
specified in gfmd.conf.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><token>admin_user_gsi_dn</token> <parameter>user_gsi_dn</parameter></term>
<listitem>
<para>
This directive specifies a subject DN of an administrator, which is
specified in gfmd.conf.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><token>local_user_map</token> <parameter>user-map-file</parameter></term>
<listitem>
<para>This directive specifies a file name
<parameter>user-map-file</parameter> for mapping local user names to
global user names.  This map file is used only for sharedsecret
authentication.  When this file is not specified, a global user name
is assumed to be same as the local user name.</para>

<para>
<parameter>user-map-file</parameter> is needed when you have to use
the sharedsecret authentication method in the case where you have
different unix account names on different filesystem nodes.  In such a
case, the <parameter>user-map-file</parameter> on each filesystem node
should have an entry from each local user name to a unique global user
name.
</para>
<para>Example:</para>
<literallayout>
	local_user_map /etc/gfarm/gfarm-usermap
</literallayout>

<para>Each line of the <parameter>user-map-file</parameter> consists
of two fields separated by spaces; the first field is a global user
name, and the second field is a local user name.</para>

<para>Example of the user mapping file:</para>
<literallayout>
	foobar foo
	quux baz
</literallayout>
<para>According to the first line of this mapping file, a global user
name, "foobar", is mapped to a local user name,  "foo", on this node.
</para>
</listitem>
</varlistentry>

<!--
<varlistentry>
<term><token>schedule_cache_timeout</token> <parameter>seconds</parameter></term>
<listitem>
<para>This directive specifies the time (in seconds) until the cache used for
filesystem node scheduling expires.
The cache holds information on each filesystem node, e.g. load average,
disk free space, and whether authentication succeeds or not.
The default time is 600 seconds, i.e. ten minutes.
</para>
<para>For example,</para>
<literallayout>
	schedule_cache_timeout 60
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>write_local_priority</token> <parameter>validity</parameter></term>
<listitem>
<para>Gfarm nearly always chooses localhost, when it selects a filesystem
node to write a file. By specifing the <token>disable</token> keyword in
this directive, Gfarm handles localhost the same as other
filesystem nodes.
The same thing can be achieved by specifying <token>disable</token>
as the value of the GFARM_WRITE_LOCAL_PRIORITY environment variable.
When both this directive and the environment variable are specified,
the value specified by the environment variable will be used.
The default is <token>enable</token>.
</para>
<para>For example,</para>
<literallayout>
	write_local_priority disable
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>write_target_domain</token> <parameter>domain</parameter></term>
<listitem>
<para>Gfarm tries to choose a filesystem node in the domain specified by
this directive, when it selects a node to write a file.
If there is no suitable node for writing in this domain, or if this
directive is not specified, the filesystem node will be chosen from
among all nodes.
You can specify this domain with the GFARM_WRITE_TARGET_DOMAIN environment
variable too.
When both this directive and the environment variable are specified,
the value specified by the environment variable will be used.
Note that if you specify this directive more than once, only the first one
will be used and the others are ignored.
</para>
<para>For example,</para>
<literallayout>
	write_target_domain example.org
</literallayout>
</listitem>
</varlistentry>
 -->

<varlistentry>
<term><token>minimum_free_disk_space</token> <parameter>bytes</parameter></term>
<listitem>
<para>This directive specifies free disk space (in bytes) which is
required on filesystem nodes. The Gfarm scheduler excludes filesystem nodes
which have less free space than this parameter, when it
schedules nodes for jobs which may write files.
The free space value may have a suffix like ``k'' (kilo bytes), 
``M'' (mega bytes), ``G'' (giga bytes) and ``T'' (tera bytes).
The default size is 128M bytes.
</para>
<para>For example,</para>
<literallayout>
	minimum_free_disk_space 1G
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>gfsd_connection_cache</token> <parameter>number</parameter></term>
<listitem>
<para>This directive specifies maximum number of cached gfsd connections.
The default is 16.
</para>
<para>For example,</para>
<literallayout>
	gfsd_connection_cache 32
</literallayout>
</listitem>
</varlistentry>

<varlistentry>
<term><token>log_level</token> <parameter>priority_level</parameter></term>
<listitem>
<para>This directive specifies a level of log priority.
The log output, which priority is inferior to this level, will not be
sent to syslog or standard error.
The priority levels are "emerg", "alert", "crit", "err", "warning", "notice",
"info" and "debug" in highest first order.
The default level is "info".
It's not recommended to specify a level higher or equal to "crit".
</para>
<para>For example,</para>
<literallayout>
	log_level debug
</literallayout>
</listitem>
</varlistentry>

<!--
<varlistentry>
<term><token>record_atime </token><parameter>validity</parameter></term>
<listitem>
<para>When "enabled" is specified, Gfarm records last access time strictly.
When "disabled" is specified, the access time becomes inaccurate, but
such setting reduces the load of metadata updates, and may improve
performance.
The "disable" setting corresponds to "noatime" setting in usual filesystem.
</para>

<para>Example:</para>
<literallayout>
	record_atime disable
</literallayout>
</listitem>
</varlistentry>
 -->

</variablelist>
</refsect1>

<refsect1 id='grammar'><title>GRAMMAR</title>
<para>This is a grammar of gfarm2.conf described by the BNF
notation.</para>
<literallayout>
	&lt;statement&gt; ::=
		&nbsp;&nbsp;&lt;spool_statement&gt; |
		&nbsp;&nbsp;&lt;spool_server_listen_address_statement&gt; |
		&nbsp;&nbsp;&lt;spool_server_cred_type_statement&gt; |
		&nbsp;&nbsp;&lt;spool_server_cred_service_statement&gt; |
		&nbsp;&nbsp;&lt;spool_server_cred_name_statement&gt; |
		&nbsp;&nbsp;&lt;metadb_server_host_statement&gt; |
		&nbsp;&nbsp;&lt;metadb_server_port_statement&gt; |
		&nbsp;&nbsp;&lt;metadb_server_cred_type_statement&gt; |
		&nbsp;&nbsp;&lt;metadb_server_cred_service_statement&gt; |
		&nbsp;&nbsp;&lt;metadb_server_cred_name_statement&gt; |
		&nbsp;&nbsp;&lt;ldap_server_host_statement&gt; |
		&nbsp;&nbsp;&lt;ldap_server_port_statement&gt; |
		&nbsp;&nbsp;&lt;ldap_base_dn_statement&gt; |
		&nbsp;&nbsp;&lt;ldap_bind_dn_statement&gt; |
		&nbsp;&nbsp;&lt;ldap_bind_password_statement&gt; |
		&nbsp;&nbsp;&lt;postgresql_server_host_statement&gt; |
		&nbsp;&nbsp;&lt;postgresql_server_port_statement&gt; |
		&nbsp;&nbsp;&lt;postgresql_dbname_statement&gt; |
		&nbsp;&nbsp;&lt;postgresql_user_statement&gt; |
		&nbsp;&nbsp;&lt;postgresql_password_statement&gt; |
		&nbsp;&nbsp;&lt;postgresql_conninfo_statement&gt; |
		&nbsp;&nbsp;&lt;auth_statement&gt; |
<!--		&nbsp;&nbsp;&lt;netparam_statement&gt; | -->
		&nbsp;&nbsp;&lt;sockopt_statement&gt; |
<!--		&nbsp;&nbsp;&lt;address_use_statement&gt; | -->
<!--		&nbsp;&nbsp;&lt;client_architecture_statement&gt; | -->
<!--		&nbsp;&nbsp;&lt;option_statement&gt; | -->
		&nbsp;&nbsp;&lt;admin_user_statement&gt; |
		&nbsp;&nbsp;&lt;admin_user_gsi_dn_statement&gt; |
		&nbsp;&nbsp;&lt;local_user_map_statement&gt; |
		&nbsp;&nbsp;&lt;schedule_cache_timeout_statement&gt; |
<!--		&nbsp;&nbsp;&lt;write_local_priority_statement&gt; | -->
<!--		&nbsp;&nbsp;&lt;write_target_domain_statement&gt; | -->
		&nbsp;&nbsp;&lt;minimum_free_disk_space_statement&gt; |
		&nbsp;&nbsp;&lt;gfsd_connection_cache_statement&gt; |
		&nbsp;&nbsp;&lt;log_level_statement&gt; |
<!--		&nbsp;&nbsp;&lt;record_atime_statement&gt; -->
	&lt;spool_statement&gt; ::= "spool" &lt;pathname&gt;
	&lt;spool_server_listen_address_statement&gt; ::=
		&nbsp;&nbsp;"spool_server_listen_address" &lt;ipv4_address&gt;
	&lt;spool_server_cred_type_statement&gt; ::=
		&nbsp;&nbsp;"spool_server_cred_type" &lt;cred_type&gt;
	&lt;spool_server_cred_service_statement&gt; ::=
		&nbsp;&nbsp;"spool_server_cred_service" &lt;cred_service&gt;
	&lt;spool_server_cred_name_statement&gt; ::=
		&nbsp;&nbsp;"spool_server_cred_name" &lt;cred_name&gt;
	&lt;metadb_server_host_statement&gt; ::= "metadb_server_host" &lt;hostname&gt;
	&lt;metadb_server_port_statement&gt; ::= "metadb_server_port" &lt;portnumber&gt;
	&lt;metadb_server_cred_type_statement&gt; ::=
		&nbsp;&nbsp;"metadb_server_cred_type" &lt;cred_type&gt;
	&lt;metadb_server_cred_service_statement&gt; ::=
		&nbsp;&nbsp;"metadb_server_cred_service" &lt;cred_service&gt;
	&lt;metadb_server_cred_name_statement&gt; ::=
		&nbsp;&nbsp;"metadb_server_cred_name" &lt;cred_name&gt;
	&lt;ldap_server_host_statement&gt; ::= "ldap_server_host" &lt;hostname&gt;
	&lt;ldap_server_port_statement&gt; ::= "ldap_server_port" &lt;portnumber&gt;
	&lt;ldap_base_dn_statement&gt; ::= "ldap_base_dn" &lt;string&gt;
	&lt;ldap_bind_dn_statement&gt; ::= "ldap_bind_dn" &lt;string&gt;
	&lt;ldap_bind_password_statement&gt; ::= "ldap_bind_password" &lt;string&gt;
	&lt;postgresql_server_host_statement&gt; ::= "postgresql_server_host" &lt;hostname&gt;
	&lt;postgresql_server_port_statement&gt; ::= "postgresql_server_port" &lt;portnumber&gt;
	&lt;postgresql_dbname_statement&gt; ::= "postgresql_dbname" &lt;string&gt;
	&lt;postgresql_user_statement&gt; ::= "postgresql_user" &lt;string&gt;
	&lt;postgresql_password_statement&gt; ::= "postgresql_password" &lt;string&gt;
	&lt;postgresql_conninfo_statement&gt; ::= "postgresql_conninfo" &lt;string&gt;
	&lt;auth_statement&gt; ::=
		&nbsp;&nbsp;"auth" &lt;validity&gt; &lt;auth_method&gt; &lt;hostspec&gt;
	&lt;auth_command&gt; ::= "enable" | "disable"
	&lt;auth_method&gt; ::= "gsi" | "gsi_auth" | "sharedsecret"
<!--	&lt;netparam_statement&gt; ::= -->
<!--		&nbsp;&nbsp;"netparam" &lt;netparam_option&gt;=&lt;number&gt; [&lt;hostspec&gt;] -->
<!--	&lt;netparam_option&gt; ::= "parallel_streams" | "stripe_unit_size" | -->
<!--		&nbsp;&nbsp;"rate_limit" -->
	&lt;sockopt_statement&gt; ::=
		&nbsp;&nbsp;"sockopt" &lt;socket_option&gt;[=&lt;number&gt;] [""LISTENER" | &lt;hostspec&gt;]
	&lt;socket_option&gt; = "debug" | "keepalive" | "sndbuf" | "rcvbuf" |
		&nbsp;&nbsp;"tcp_nodelay"
<!--	&lt;address_use_statement&gt; ::= "address_use" &lt;hostspec&gt; -->
<!--	&lt;client_architecture_statement&gt; ::= -->
<!--		&nbsp;&nbsp;"client_architecture" &lt;architecture&gt; &lt;hostspec&gt; -->
<!--	&lt;option_statement&gt; ::= "option" &lt;an_option&gt; -->
<!--	&lt;an_option&gt; ::= "noatime" -->
	&lt;admin_user_statement&gt; ::= "admin_user" &lt;string&gt;
	&lt;admin_user_gsi_dn_statement&gt; ::= "admin_user_gsi_dn" &lt;string&gt;
	&lt;local_user_map_statement&gt; ::= "local_user_map" &lt;pathname&gt;
<!--	&lt;dir_cache_timeout_statement&gt; ::=	"dir_cache_timeout" &lt;number&gt; -->
<!--	&lt;host_cache_timeout_statement&gt; ::= "host_cache_timeout" &lt;number&gt; -->
	&lt;schedule_cache_timeout_statement&gt; ::= "schedule_cache_timeout" &lt;number&gt;
<!--	&lt;write_local_priority_statement&gt; ::= "write_local_priority" &lt;validity&gt; -->
<!--	&lt;write_target_domain_statement&gt; ::= "write_target_domain" &lt;string&gt; -->
	&lt;minimum_free_disk_space_statement&gt; ::=
		&nbsp;&nbsp;"minimum_free_disk_space" &lt;size&gt;
	&lt;gfsd_connection_cache_statement&gt; ::= "gfsd_connection_cache" &lt;number&gt;
	&lt;log_level_statement&gt; ::= "log_level" &lt;log_priority&gt;
<!--	&lt;record_atime_statement&gt; ::= "record_atime" &lt;validity&gt; -->
	&lt;hostspec&gt; ::= &lt;ipv4_address&gt; | &lt;ipv4_address&gt; "/" &lt;address_mask&gt; |
		&nbsp;&nbsp;&lt;hostname&gt; | "." &lt;domain_name&gt; | "*"
	&lt;pathname&gt; ::= &lt;pathname_character&gt; &lt;pathname_character&gt;*
	&lt;pathname_character&gt; ::= &lt;hostname_character&gt; | "," | "/" | "_"
	&lt;hostname&gt; ::= &lt;hostname_character&gt; &lt;hostname_character&gt;*
	&lt;hostname_character&gt; ::= &lt;alphabet&gt; | &lt;digit&gt; | "-" | "."
	&lt;portnumber&gt; ::= &lt;number&gt;
	&lt;size&gt; ::= &lt;number&gt; [ "k" | "M" | "G" | "T" ]
	&lt;number&gt; ::= &lt;digit&gt; [&lt;digit&gt;*]
	&lt;digit&gt; ::= "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"
	&lt;string&gt; ::= """ &lt;double_quoted_character&gt;* """
<!-- 	&lt;string&gt; ::= &lt;string_component&gt; &lt;string_component&gt;* -->
<!-- 	&lt;string_component&gt; ::= &lt;pathname&gt; | -->
<!-- 		&nbsp;&nbsp;"'" &lt;single_quoted_character&gt;* "'" | -->
<!-- 		&nbsp;&nbsp;""" &lt;double_quoted_character&gt;* """ -->
<!-- 	&lt;single_quoted_character&gt; ::= -->
<!-- 		&nbsp;&nbsp;&lt;any_character_except_single_quotation&gt; -->
	&lt;double_quoted_character&gt; ::=
		&nbsp;&nbsp;&lt;any_character_except_backslash_and_double_quotation&gt; |
		&nbsp;&nbsp;"\\" | "\""
	&lt;validity&gt; ::= "enable" | "disable"
	&lt;log_priority&gt; ::= "emerg" | "alert" | "crit" | "err" | "warning" |
		&nbsp;&nbsp;"notice" | "info" | "debug"
</literallayout>

</refsect1>

<refsect1 id='examples'><title>EXAMPLES</title>
<para>
The following is an example usin PostgreSQL to store the metadata,
and to allow access from filesystem nodes and clients at IP address
192.168.0.0/24, via sharedsecret authentication.
</para>
<literallayout>
spool /var/spool/gfarm
metadb_server_host metadb.example.org
metadb_server_port 601
postgresql_server_host metadb.example.org
postgresql_server_port 5432
postgresql_dbname gfarm
postgresql_user gfarm
postgresql_password "secret-postgresql-password"
auth enable sharedsecret 192.168.0.0/24
sockopt keepalive
</literallayout>

<para>
The following is an example using LDAP to store the metadata,
and to allow access from filesystem nodes and clients at any IP address,
via GSI authentication.
</para>
<literallayout>
spool /var/spool/gfarm
metadb_server_host metadb.example.com
metadb_server_port 601
ldap_server_host metadb.example.com
ldap_server_port 602
ldap_base_dn "dc=example, dc=com"
ldap_bind_dn "cn=gfarmuser, dc=example, dc=com"
ldap_bind_password "secret-ldap-password"
auth enable gsi *
sockopt keepalive
</literallayout>


</refsect1>

<refsect1 id='files'><title>FILES</title>
<variablelist>

<varlistentry>
<term><filename>%%SYSCONFDIR%%/gfarm2.conf</filename></term>
<listitem><para></para></listitem>
</varlistentry>

<varlistentry>
<term><filename>$HOME/.gfarm2rc</filename></term>
<listitem><para></para></listitem>
</varlistentry>

</variablelist>
</refsect1>

<refsect1 id='see-also'><title>SEE ALSO</title>
<para>
  <citerefentry><refentrytitle>gfmd</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
  <citerefentry><refentrytitle>gfsd</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
  <citerefentry><refentrytitle>setsockopt</refentrytitle><manvolnum>2</manvolnum></citerefentry></para>
</refsect1>
</refentry>
