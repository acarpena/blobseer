CC          = @CC@
AR          = @AR@
RANLIB      = @RANLIB@
LIBNAME     = @LIBNAME@
srcdir      = @srcdir@
CC_SHL      = @CC_SHL@
SHLIBNAME   = @SHLIBNAME@

#DEFS            = @DEFS@ -I. -I${srcdir}
CPPFLAGS        = @CPPFLAGS@
INCLUDES = -I@MPI_INCLUDE_DIR@ -I${srcdir}/../include -I../include -I../../include  -I${srcdir}/../../../../include -I../../../../include
#CFLAGS      = @CPPFLAGS@ @CFLAGS@ $(INCLUDES) 
CFLAGS          = @CFLAGS@

top_builddir  = @master_topbuild_dir@
LIBTOOL       = @LIBTOOL@
C_COMPILE       = $(CC) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
C_COMPILE_SHL   = $(CC_SHL) $(DEFS) $(INCLUDES) $(CFLAGS) $(CPPFLAGS)
#C_COMPILE_SHL = $(CC_SHL) 

@VPATH@

AD_UFS_OBJECTS = ad_ufs_open.o ad_ufs.o


default: $(LIBNAME)
	@if [ "@ENABLE_SHLIB@" != "none" ] ; then \
	    $(MAKE) $(SHLIBNAME).la ;\
	fi

.SUFFIXES: $(SUFFIXES) .p .lo

#	$(CC) $(CFLAGS) -c $<
.c.o:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE) -c $< ; \
	fi
	@$(C_COMPILE) -c $<
#	$(C_COMPILE_SHL) $(CFLAGS) -c $< -o _s$*.o
#	@mv -f _s$*.o $*.lo
.c.lo:
	@if [ "x$(VERBOSE)" != "x1" ] ; then \
	  echo "  CC              $<" ; \
	else \
	  echo $(C_COMPILE_SHL) -c $< -o _s$*.o ; \
	  echo mv -f _s$*.o $*.lo ; \
	fi
	@$(C_COMPILE_SHL) -c $< -o _s$*.o
	@mv -f _s$*.o $*.lo

$(LIBNAME): $(AD_UFS_OBJECTS)
	$(AR) $(LIBNAME) $(AD_UFS_OBJECTS)
	$(RANLIB) $(LIBNAME) 

AD_UFS_LOOBJECTS=$(AD_UFS_OBJECTS:.o=.lo)
$(SHLIBNAME).la: $(AD_UFS_LOOBJECTS)
	$(AR) $(SHLIBNAME).la $(AD_UFS_LOOBJECTS)

coverage:
	-@for file in  ${AD_UFS_OBJECTS:.o=.c} ; do \
		gcov -b -f $$file ; done

clean:
	@rm -f *.o *.lo *.gcno *.gcda *.bb *.bbg
	@rm -f ${srcdir}/*.gcno ${srcdir}/*.gcda 
	@rm -f ${srcdir}/*.bb ${srcdir}/*.bbg
